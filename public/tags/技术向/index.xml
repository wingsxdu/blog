<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术向 on beihai</title>
    <link>https://www.wingsxdu.com/tags/%E6%8A%80%E6%9C%AF%E5%90%91/</link>
    <description>Recent content in 技术向 on beihai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Nov 2019 14:24:34 +0800</lastBuildDate>
    
	<atom:link href="https://www.wingsxdu.com/tags/%E6%8A%80%E6%9C%AF%E5%90%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>为什么使用通信来共享内存？· Why&#39;s THE Design?</title>
      <link>https://www.wingsxdu.com/post/2019-11-01-whys-the-design-communication-shared-memory/</link>
      <pubDate>Fri, 01 Nov 2019 14:24:34 +0800</pubDate>
      
      <guid>https://www.wingsxdu.com/post/2019-11-01-whys-the-design-communication-shared-memory/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;为什么这么设计（Why’s THE Design）是一系列关于计算机领域中程序设计决策的文章，我们在这个系列的每一篇文章中都会提出一个具体的问题并从不同的角度讨论这种设计的优缺点、对具体实现造成的影响。如果你有想要了解的问题，可以在文章下面留言。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>为什么 TCP 建立连接需要三次握手 · Why&#39;s THE Design? （转载）</title>
      <link>https://www.wingsxdu.com/post/2019-11-01-whys-the-design-tcp-three-way-handshake/</link>
      <pubDate>Fri, 01 Nov 2019 12:14:37 +0800</pubDate>
      
      <guid>https://www.wingsxdu.com/post/2019-11-01-whys-the-design-tcp-three-way-handshake/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;为什么这么设计（Why’s THE Design）是一系列关于计算机领域中程序设计决策的文章，我们在这个系列的每一篇文章中都会提出一个具体的问题并从不同的角度讨论这种设计的优缺点、对具体实现造成的影响。如果你有想要了解的问题，可以在文章下面留言。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>一些经常忘记的命令</title>
      <link>https://www.wingsxdu.com/post/2019-10-18-%E4%B8%80%E4%BA%9B%E7%BB%8F%E5%B8%B8%E5%BF%98%E8%AE%B0%E7%9A%84%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 18 Oct 2019 12:50:20 +0800</pubDate>
      
      <guid>https://www.wingsxdu.com/post/2019-10-18-%E4%B8%80%E4%BA%9B%E7%BB%8F%E5%B8%B8%E5%BF%98%E8%AE%B0%E7%9A%84%E5%91%BD%E4%BB%A4/</guid>
      <description>Ubuntu Ubuntu 后台运行程序 1 nohup ./test 输出 appendding output to &amp;lsquo;nohub.out&amp;rsquo; 大意为将命令行输出的信息写入到&amp;rsquo;nohub.out&amp;rsquo;文件 如何关闭进程? 1 2 3 ps -A #</description>
    </item>
    
    <item>
      <title>内存空洞</title>
      <link>https://www.wingsxdu.com/post/2019-10-10-memoryholes/</link>
      <pubDate>Thu, 10 Oct 2019 10:35:26 +0800</pubDate>
      
      <guid>https://www.wingsxdu.com/post/2019-10-10-memoryholes/</guid>
      <description>&lt;p&gt;计算机在加载和保存数据时，如果内存地址合理地对齐的将会更有效率。例如2字节大小的int16类型的变量地址应该是偶数，一个4字节大小的rune类型变量的地址应该是4的倍数，一个8字节大小的float64、uint64或64-bit指针类型变量的地址应该是8字节对齐的。但是对于再大的地址对齐倍数则是不需要的，即使是complex128等较大的数据类型最多也只是8字节对齐。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>并发编程与 Goroutine 调度</title>
      <link>https://www.wingsxdu.com/post/2019-09-29-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B8%8E-goroutine-%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Sun, 29 Sep 2019 17:20:37 +0800</pubDate>
      
      <guid>https://www.wingsxdu.com/post/2019-09-29-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B8%8E-goroutine-%E8%B0%83%E5%BA%A6/</guid>
      <description>并发与并行 并行是指两个或者多个事件在同一时刻发生；并发是指两个或多个事件在同一时间间隔发生。 并行是在不同实体上的多个事件，在多台处理器上同时</description>
    </item>
    
    <item>
      <title>GC 垃圾回收机制(改)</title>
      <link>https://www.wingsxdu.com/post/2019-09-29-golanggc/</link>
      <pubDate>Fri, 27 Sep 2019 21:42:49 +0800</pubDate>
      
      <guid>https://www.wingsxdu.com/post/2019-09-29-golanggc/</guid>
      <description>首先我们了解下什么是垃圾回收 内存管理是开发应用中的一大难题。传统的系统级编程语言（主要指C/C++）中，程序开发者必须对内存小心的进行管理操</description>
    </item>
    
  </channel>
</rss>